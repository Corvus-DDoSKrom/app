'use strict'

const randomChartData = (r) => {
  const data = []
  for (let a = 0; a < r; a++) {
    data.push(Math.round(200 * Math.random()))
  }
  return data
}

const chartColors = {
  primary: '#00D1B2',
  info: '#209CEE',
  danger: '#FF3860'
}

const ctx = document.getElementById('big-line-chart').getContext('2d')
new Chart(ctx, {
  type: 'line',
  data: {
    datasets: Object.keys(chartColors).map((color) => ({
      fill: false,
      borderColor: chartColors[color],
      borderWidth: 2,
      borderDash: [],
      borderDashOffset: 0,
      pointBackgroundColor: chartColors[color],
      pointBorderColor: 'rgba(255,255,255,0)',
      pointHoverBackgroundColor: chartColors[color],
      pointBorderWidth: 20,
      pointHoverRadius: 4,
      pointHoverBorderWidth: 15,
      pointRadius: 4,
      data: randomChartData(9)
    })),
    labels: ['01', '02', '03', '04', '05', '06', '07', '08', '09']
  },
  options: {
    maintainAspectRatio: false,
    legend: { display: false },
    responsive: true,
    tooltips: {
      backgroundColor: '#f5f5f5',
      titleFontColor: '#333',
      bodyFontColor: '#666',
      bodySpacing: 4,
      xPadding: 12,
      mode: 'nearest',
      intersect: 0,
      position: 'nearest'
    },
    scales: {
      yAxes: [
        {
          barPercentage: 1.6,
          gridLines: {
            drawBorder: false,
            color: 'rgba(29,140,248,0.0)',
            zeroLineColor: 'transparent'
          },
          ticks: { padding: 20, fontColor: '#9a9a9a' }
        }
      ],
      xAxes: [
        {
          barPercentage: 1.6,
          gridLines: {
            drawBorder: false,
            color: 'rgba(225,78,202,0.1)',
            zeroLineColor: 'transparent'
          },
          ticks: { padding: 20, fontColor: '#9a9a9a' }
        }
      ]
    }
  }
})
